#include <stdio.h>
#include <stdlib.h>
#include <string.h>

void viderbuffer()
{
    int c = 0 ;
    while (c != '\n' && c != EOF) {
            c = getchar() ; }
}

void texte(char chaine[50])
{
    char *positionEntree = NULL ;
    if (fgets(chaine, 50, stdin) != NULL)
    {
        positionEntree = strchr(chaine, '\n') ;
        if (positionEntree != NULL)
        {
            *positionEntree = '\0' ;
        }
        else
        {
            viderbuffer() ;
        }
    }
    else
    {
       viderbuffer() ;
    }
}

int rechercher(char utilisateur[50], char nom_rdv[50])
{
    FILE* fichier1 = NULL ;
    FILE* fichier2 = NULL ;
    char liste_rdv[100] ="";
    char *positionRDV;
    int caractereActuel = 0;
    int i=0;
    fichier1 = fopen(utilisateur, "r") ;
    if (fichier1 != NULL)
    {
        rewind(fichier1);
        do
        {
            caractereActuel = fgetc(fichier1);
            liste_rdv[i] = caractereActuel;
            i++;

        } while (caractereActuel != EOF);
        positionRDV = strstr(liste_rdv, nom_rdv);
        if (positionRDV != NULL) {
            fichier2 = fopen(strcat(nom_rdv,".txt"), "r") ;
            if (fichier2 != NULL) return 1;
            else return 0;
            fclose(fichier2);
        }
        else return 0;
    }
    else return 0;

    fclose(fichier1);
}

void consulter_Agenda()
{
    FILE* fichier1 = NULL ;
    FILE* fichier2 = NULL ;
    char utilisateur[50];
    char nom_rdv[50];
    int caractereActuel = 0;
    printf("Quel utilisateur etes-vous ? : ") ;
    texte(utilisateur) ;
    fichier1 = fopen(strcat(utilisateur,".txt"), "r") ;
    if (fichier1 != NULL){
        do
        {
            caractereActuel = fgetc(fichier1);
            printf("%c", caractereActuel);
        } while (caractereActuel != EOF);
        caractereActuel = 0;
        printf("\nQuel rdv voulez-vous consulter ?  ");
        texte(nom_rdv);
        if (rechercher(utilisateur, nom_rdv) == 1) {
            fichier2 = fopen(nom_rdv, "r") ;
            if (fichier2 != NULL) {
                do
                {
                    caractereActuel = fgetc(fichier2);
                    printf("%c", caractereActuel);
                } while (caractereActuel != EOF);
            }
            fclose(fichier2) ;
        }
        else printf("\nCe rdv n'existe pas !");
    fclose(fichier1) ;
    }
    else
    {
        printf("Vous n'etes pas enregistre en tant qu'utilisateur !\n");
    }
}

typedef struct  {
    char motif [50];
    char date [50];
    char lieu[50];
    char heure[50];
}RDV;

int creer_RDV(char utilisateur[50])
{

    RDV info;
    char nomRDV[20] ;
    FILE *fichier = NULL;
    FILE *fichier2 = NULL;
    printf("Quel utilisateur etes-vous ? : ") ;
    texte(utilisateur) ;
    fichier = fopen(strcat(utilisateur,".txt"), "r");
    if (fichier == NULL){
        printf("Vous n'etes pas enregistre en tant qu'utilisateur !");
        fclose(fichier);
    }
    else {
        fclose(fichier);
        fopen(utilisateur, "a");
        printf("\nDonnez le nom du fichier : ");
        texte(nomRDV);
        fprintf(fichier, strcat(nomRDV,".txt"));
        fprintf(fichier, "\n");
        fclose(fichier);
        fichier2 = fopen(nomRDV, "w+");

        printf("\nEntrer le motif : ") ;
        texte(info.motif) ;
        fprintf(fichier2, "motif : %s\n", info.motif) ;

        printf("\nEntrer date : ") ;
        texte(info.date) ;
        fprintf(fichier2, "date : %s\n", info.date) ;

        printf("\nEntrer le lieu : ") ;
        texte(info.lieu) ;
        fprintf(fichier2, "lieu : %s\n", info.lieu) ;

        printf("\nEntrer l'heure : ") ;
        texte(info.heure) ;
        fprintf(fichier2, "Heure : %s\n", info.heure) ;

        fclose(fichier2);
    }
    return 0 ;
}

int modif_RDV()
{
    RDV info;
    FILE *fichier;
    FILE *fichier2;
    char rdv[500] = "";
    char utilisateur[50];
    printf("Quel utilisateur etes vous ? : ");
    texte(utilisateur);
    fichier = fopen(strcat(utilisateur,".txt"),"r");
    if (fichier == NULL)
        printf("Vous n'etes pas enregistre en tant qu'utilisateur !");
    else {
        printf("Quel rdv voulez vous modifier ? : ");
        texte(rdv);
        if (rechercher(utilisateur, rdv) == 0 ) {
            printf("Le rdv n'existe pas !");
        }
        else{
            fichier2 = fopen(rdv, "w+");
            printf("\nEntrer le motif du rdv : ") ;
            texte(info.motif) ;
            fprintf(fichier2, "motif : %s\n", info.motif) ;

            printf("\nEntrer date : ") ;
            texte(info.date) ;
            fprintf(fichier2, "date : %s\n", info.date) ;

            printf("\nEntrer le lieu : ") ;
            texte(info.lieu) ;
            fprintf(fichier2, "lieu : %s\n", info.lieu) ;

            printf("\nEntrer l'heure : ") ;
            texte(info.heure) ;
            fprintf(fichier2, "Heure : %s\n", info.heure) ;

            fclose(fichier2);
        }
    }

    fclose(fichier);
    return 0;
}

int ajout_Util()
{
    FILE *fichier = NULL ;
    char utilisateur[50] ;
    printf("Entrer le nom de l'utilisateur : ");
    texte(utilisateur);
    fichier = fopen(strcat(utilisateur,".txt"), "w") ;
    if (fichier != NULL) {
        fprintf(fichier, "Fichier utilisateur : %s\n", utilisateur) ;
    }
    fclose(fichier);
    return 0 ;
}

int modif_Util()
{
    FILE *fichier = NULL ;
    char utilisateur1[50];
    char utilisateur2[50];
    printf("Entrer le nom de l'utilisateur a modifier : ");
    texte(utilisateur1);
    printf("Entrer le nom du nouvel utilisateur : ");
    texte(utilisateur2);
    fichier = fopen(strcat(utilisateur1, ".txt"), "r") ;
    if (fichier == NULL) printf("L'utilisateur a modifier n'est pas enregistre !");
    else fclose(fichier);
    if (rename(utilisateur1, strcat(utilisateur2,".txt")) == 0) printf("Fichier renomme avec succes");
    else printf("Echec lors du renommage du fichier");
    return 0 ;
}

int suppr_Util()
{
    FILE *fichier;
    char utilisateur[50];
    printf("Quel utilisateur voulez-vous supprimer ? : ");
    texte(utilisateur);
    fichier = fopen(strcat(utilisateur,".txt"), "r");
    if (fichier != NULL) {
        fclose(fichier);
        remove(utilisateur);
        printf("Utilisateur supprime avec succes !\n");
    }
    else printf("Cet utilisateur n'etait pas enregistre");
    return 0 ;
}

int ajout_JourSpe()
{
    char nom_fichier[50];
    char jour_spe[50];
    char date[50];
    FILE *fichier = NULL;
    printf("Entrer le nom du fichier : ");
    texte(nom_fichier);
    printf("Entrer la journee speciale a ajouter : ");
    texte(jour_spe);
    printf("Entrer la date (de debut et de fin si besoin) : ");
    texte(date);
    fichier = fopen(strcat(nom_fichier,".txt"), "a+");
    if (fichier != NULL) {
        fprintf(fichier, "Journee speciale : %s\n", jour_spe);
        fprintf(fichier, "Date : %s", date);
        fprintf(fichier, "\n");
    }
    fclose(fichier);
    return 0 ;
}

int modif_JourSpe()
{
    char nouveau[50];
    char date[50];
    char jour_spe[50];
   // char resume[50];
    int caractereActuel = 0;
    FILE *fichier = NULL;
    printf("Donner le nom du fichier a modifier : ");
    texte(jour_spe);
    fichier = fopen(strcat(jour_spe,".txt"), "r");
    if(fichier != NULL) {
        printf("Rappel : \n");
        do
        {
            caractereActuel = fgetc(fichier);
            printf("%c", caractereActuel);
        } while (caractereActuel != EOF);
        printf("\n");
        fclose(fichier);
        fichier = fopen(jour_spe, "w+");
        printf("Entrer la nouvelle journee speciale : ");
        texte(nouveau);
        printf("Entrer la date (de debut et de fin si besoin) : ");
        texte(date);
        fprintf(fichier, "Journee speciale : %s\n", nouveau);
        fprintf(fichier, "Date : %s", date);
        fprintf(fichier, "\n");
    }
    else {printf("Cette journee speciale n'existe pas");}
    fclose(fichier);
    return 0 ;
}

int suppr_JourSpe()
{
    char nom_fichier[50];
    FILE *fichier = NULL;
    printf("Donner le nom du fichier de l'evenement a supprimer : ");
    texte(nom_fichier);
    fichier = fopen(strcat(nom_fichier,".txt"), "r");
    if(fichier != NULL) {
        fclose(fichier);
        remove(nom_fichier);
        printf("Evenement supprime avec succes !");
    }
    else printf("Cet evenement n'existe pas");
    return 0 ;
}

int affichage_Jour()
{
    return 0 ;
}

int affichage_Semaine()
{
    return 0 ;
}

int affichage_Mois()
{
    return 0 ;
}

int utilisateur()
{
    int choix = 0;
    char utilisateur[50] ;
    printf("\nConsulter l'agenda = 1 ** Creer un RDV = 2 ** Modifier un RDV = 3 \n") ;
        scanf("%d", &choix) ;
        viderbuffer() ;
        switch(choix)
        {case 1 : consulter_Agenda() ; break ;
         case 2 : creer_RDV(utilisateur) ; break ;
         case 3 : modif_RDV() ; break ;
         default : while (choix != 1 && choix != 2 && choix != 3) {
            printf("Veuillez saisir une des options ci-dessus : ") ;
            scanf("%d", &choix) ;
            viderbuffer() ;
            switch(choix)
            {case 1 : consulter_Agenda() ; break ;
            case 2 : creer_RDV(utilisateur) ; break ;
            case 3 : modif_RDV() ; break ;
            }
            }
        }
 return 0 ;
}

int administrateur()
{
    int choix;
    printf("\nAjouter un utilisateur =..........1\nModifier un utilisateur =.........2\nSupprimer un utilisateur =........3\n") ;
    printf("Ajouter une journee speciale =....4\nModifier une journee speciale =...5\nSupprimer une journee speciale =..6\n") ;
    printf("Affichage par jour =..............7\nAffichage par semaine =...........8\nAffichage par mois =..............9\n") ;
    scanf("%d", &choix) ;
    viderbuffer() ;
    switch(choix)
    {case 1 : ajout_Util() ; break ;
    case 2 : modif_Util() ; break ;
    case 3 : suppr_Util() ; break ;
    case 4 : ajout_JourSpe() ; break ;
    case 5 : modif_JourSpe() ; break ;
    case 6 : suppr_JourSpe() ; break ;
    case 7 : affichage_Jour() ; break ;
    case 8 : affichage_Semaine() ; break ;
    case 9 : affichage_Mois() ; break ;
    default : while (choix != 1 && choix != 2 && choix != 3 && choix != 4 && choix != 5 && choix != 6 && choix != 7 && choix != 8 && choix != 9) {
                printf("Veuillez choisir parmis les options ci-dessus : ");
                scanf("%d", &choix) ;
                viderbuffer() ;
                switch(choix)
                {case 1 : ajout_Util() ; break ;
                case 2 : modif_Util() ; break ;
                case 3 : suppr_Util() ; break ;
                case 4 : ajout_JourSpe() ; break ;
                case 5 : modif_JourSpe() ; break ;
                case 6 : suppr_JourSpe() ; break ;
                case 7 : affichage_Jour() ; break ;
                case 8 : affichage_Semaine() ; break ;
                case 9 : affichage_Mois() ; break ;
                }
            }
    }
  return 0 ;
}

int main()
{
    int choix ;
    char stop = 0 ;
    printf("\t\t\t\t\tBienvenue dans votre agenda virtuel !\n") ;
    while (stop != 33 ) {
        printf("\nChoisissez le mode : Utilisateur = 1 ****** Administrateur = 2\n") ;
        scanf("%d", &choix) ;
        viderbuffer() ;
        while (choix != 1 && choix != 2) {
            printf("Veuillez saisir choisir un des deux modes proposes : ") ;
            scanf("%d", &choix) ;
            viderbuffer() ;
        }
        if (choix == 1) utilisateur() ;
        else administrateur() ;
        printf("\nTaper ! pour quitter / Autre pour continuer : ") ;
        scanf("%c", &stop) ;
    }
    return 0;
}
